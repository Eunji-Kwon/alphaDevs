{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guest0\\\\Desktop\\\\College\\\\Class\\\\s3\\\\Web App\\\\Project\\\\alphaDevs\\\\src\\\\components\\\\addtodo.component.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//import './RoomReservation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomReservation = () => {\n  _s();\n  const [numRooms, setNumRooms] = useState(1);\n  const [showRoomSelection, setShowRoomSelection] = useState(false);\n  const roomTypes = [{\n    type: 'Standard',\n    price: 100\n  }, {\n    type: 'Deluxe',\n    price: 150\n  }, {\n    type: 'Suite',\n    price: 300\n  }];\n  const [selectedRooms, setSelectedRooms] = useState([{\n    type: roomTypes[0].type\n  }]);\n  const handleRoomTypeChange = (index, value) => {\n    const updatedRooms = [...selectedRooms];\n    if (!updatedRooms[index]) {\n      updatedRooms[index] = {\n        type: value\n      };\n    } else {\n      updatedRooms[index].type = value;\n    }\n    setSelectedRooms(updatedRooms);\n  };\n  const renderRoomSelector = index => {\n    const roomOptions = roomTypes.map((room, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: room.type,\n      children: room.type\n    }, optionIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleRoomTypeChange(index, e.target.value),\n      children: roomOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n  const renderRoomSelection = () => {\n    const roomSelections = [];\n    for (let i = 0; i < numRooms; i++) {\n      roomSelections.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Table \", i + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Table Type:\", renderRoomSelector(i)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this));\n    }\n    return roomSelections;\n  };\n  const calculateTotal = () => {\n    let total = 0;\n    selectedRooms.forEach((room, index) => {\n      const selectedRoom = roomTypes.find(type => type.type === room.type);\n      if (selectedRoom) {\n        total += selectedRoom.price;\n      } else {\n        console.error('Table type not selected for room ${index + 1}');\n      }\n    });\n\n    // Add taxes (HST i.e., 13%)\n    const taxes = total * 0.13;\n    const grandTotal = total + taxes;\n    return {\n      total: total.toFixed(2),\n      taxes: taxes.toFixed(2),\n      grandTotal: grandTotal.toFixed(2)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reservation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select the number of guests:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: numRooms,\n      onChange: e => setNumRooms(parseInt(e.target.value, 10))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowRoomSelection(true),\n      children: \"Select Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), showRoomSelection && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Table Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), renderRoomSelection(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Table Types and Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: roomTypes.map((room, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [room.type, \" - $\", room.price, \" per night\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), showRoomSelection && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Total Cost Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $\", calculateTotal().total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Taxes (HST 13%): $\", calculateTotal().taxes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Grand Total: $\", calculateTotal().grandTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(RoomReservation, \"7eNBIMRove0JFjKU20xVUw3e3sQ=\");\n_c = RoomReservation;\nexport default RoomReservation;\nvar _c;\n$RefreshReg$(_c, \"RoomReservation\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoomReservation","_s","numRooms","setNumRooms","showRoomSelection","setShowRoomSelection","roomTypes","type","price","selectedRooms","setSelectedRooms","handleRoomTypeChange","index","value","updatedRooms","renderRoomSelector","roomOptions","map","room","optionIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","renderRoomSelection","roomSelections","i","push","className","calculateTotal","total","forEach","selectedRoom","find","console","error","taxes","grandTotal","toFixed","parseInt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/guest0/Desktop/College/Class/s3/Web App/Project/alphaDevs/src/components/addtodo.component.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n//import './RoomReservation.css';\r\n\r\nconst RoomReservation = () => {\r\n    const [numRooms, setNumRooms] = useState(1);\r\n    const [showRoomSelection, setShowRoomSelection] = useState(false);\r\n\r\n    const roomTypes = [\r\n        { type: 'Standard', price: 100 },\r\n        { type: 'Deluxe', price: 150 },\r\n        { type: 'Suite', price: 300 },\r\n    ];\r\n\r\n    const [selectedRooms, setSelectedRooms] = useState([\r\n        {\r\n            type: roomTypes[0].type,\r\n        },\r\n    ]);\r\n\r\n    const handleRoomTypeChange = (index, value) => {\r\n        const updatedRooms = [...selectedRooms];\r\n\r\n        if (!updatedRooms[index]) {\r\n            updatedRooms[index] = { type: value };\r\n        } else {\r\n            updatedRooms[index].type = value;\r\n        }\r\n\r\n        setSelectedRooms(updatedRooms);\r\n    };\r\n\r\n    const renderRoomSelector = (index) => {\r\n        const roomOptions = roomTypes.map((room, optionIndex) => (\r\n            <option key={optionIndex} value={room.type}>\r\n                {room.type}\r\n            </option>\r\n        ));\r\n\r\n        return (\r\n            <select onChange={(e) => handleRoomTypeChange(index, e.target.value)}>\r\n                {roomOptions}\r\n            </select>\r\n        );\r\n    };\r\n\r\n    const renderRoomSelection = () => {\r\n        const roomSelections = [];\r\n\r\n        for (let i = 0; i < numRooms; i++) {\r\n            roomSelections.push(\r\n                <div key={i} className=\"room-selection\">\r\n                    <p>Table {i + 1}</p>\r\n                    <label>\r\n                        Table Type:\r\n                        {renderRoomSelector(i)}\r\n                    </label>\r\n                </div>\r\n            );\r\n        }\r\n        return roomSelections;\r\n    };\r\n\r\n    const calculateTotal = () => {\r\n        let total = 0;\r\n\r\n        selectedRooms.forEach((room, index) => {\r\n            const selectedRoom = roomTypes.find((type) => type.type === room.type);\r\n\r\n            if (selectedRoom) {\r\n                total += selectedRoom.price;\r\n            } else {\r\n                console.error('Table type not selected for room ${index + 1}');\r\n            }\r\n        });\r\n\r\n        // Add taxes (HST i.e., 13%)\r\n        const taxes = total * 0.13;\r\n        const grandTotal = total + taxes;\r\n\r\n        return { total: total.toFixed(2), taxes: taxes.toFixed(2), grandTotal: grandTotal.toFixed(2) };\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Reservation</h1>\r\n            <p>Select the number of guests:</p>\r\n            <input\r\n                type=\"number\"\r\n                value={numRooms}\r\n                onChange={(e) => setNumRooms(parseInt(e.target.value, 10))}\r\n            />\r\n\r\n            <button onClick={() => setShowRoomSelection(true)}>Select Table</button>\r\n\r\n            {showRoomSelection && (\r\n                <div>\r\n                    <h2>Table Selection</h2>\r\n                    {renderRoomSelection()}\r\n\r\n                    <h2>Table Types and Prices</h2>\r\n                    <ul>\r\n                        {roomTypes.map((room, index) => (\r\n                            <li key={index}>\r\n                                {room.type} - ${room.price} per night\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n\r\n            {showRoomSelection && (\r\n                <div>\r\n                    <h2>Total Cost Breakdown</h2>\r\n                    <p>Total: ${calculateTotal().total}</p>\r\n                    <p>Taxes (HST 13%): ${calculateTotal().taxes}</p>\r\n                    <p>Grand Total: ${calculateTotal().grandTotal}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomReservation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}